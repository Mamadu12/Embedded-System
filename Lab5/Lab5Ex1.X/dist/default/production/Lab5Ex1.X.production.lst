

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Dec 09 15:31:53 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     	;# 
    11  0001                     	;# 
    12  0002                     	;# 
    13  0003                     	;# 
    14  0004                     	;# 
    15  0005                     	;# 
    16  0006                     	;# 
    17  0007                     	;# 
    18  0008                     	;# 
    19  0009                     	;# 
    20  000A                     	;# 
    21  000B                     	;# 
    22  000C                     	;# 
    23  000D                     	;# 
    24  000E                     	;# 
    25  000E                     	;# 
    26  000F                     	;# 
    27  0010                     	;# 
    28  0011                     	;# 
    29  0012                     	;# 
    30  0013                     	;# 
    31  0014                     	;# 
    32  0015                     	;# 
    33  0015                     	;# 
    34  0016                     	;# 
    35  0017                     	;# 
    36  0018                     	;# 
    37  0019                     	;# 
    38  001A                     	;# 
    39  001B                     	;# 
    40  001B                     	;# 
    41  001C                     	;# 
    42  001D                     	;# 
    43  001E                     	;# 
    44  001F                     	;# 
    45  0081                     	;# 
    46  0085                     	;# 
    47  0086                     	;# 
    48  0087                     	;# 
    49  0088                     	;# 
    50  0089                     	;# 
    51  008C                     	;# 
    52  008D                     	;# 
    53  008E                     	;# 
    54  0091                     	;# 
    55  0092                     	;# 
    56  0093                     	;# 
    57  0094                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009C                     	;# 
    61  009D                     	;# 
    62  009E                     	;# 
    63  009F                     	;# 
    64  010C                     	;# 
    65  010D                     	;# 
    66  010E                     	;# 
    67  010F                     	;# 
    68  018C                     	;# 
    69  018D                     	;# 
    70  000B                     _INTCON	set	11
    71  000B                     _INTCONbits	set	11
    72  0008                     _PORTD	set	8
    73  005A                     _TMR0IF	set	90
    74  0081                     _OPTION_REGbits	set	129
    75  0088                     _TRISD	set	136
    76                           
    77                           	psect	cinit
    78  0015                     start_initialization:	
    79                           ; #config settings
    80                           
    81  0015                     __initialization:	
    82  0015                     end_of_initialization:	
    83                           ;End of C runtime variable initialization code
    84                           
    85  0015                     __end_of__initialization:	
    86  0015  0183               	clrf	3
    87  0016  120A  118A  282A   	ljmp	_main	;jump to C main() function
    88                           
    89                           	psect	cstackCOMMON
    90  0070                     __pcstackCOMMON:	
    91  0070                     ?_main:	
    92  0070                     ?_myISR:	
    93                           ; 1 bytes @ 0x0
    94                           
    95  0070                     ??_myISR:	
    96                           ; 1 bytes @ 0x0
    97                           
    98                           
    99                           ; 1 bytes @ 0x0
   100  0070                     	ds	5
   101  0075                     ??_main:	
   102                           
   103                           	psect	maintext
   104  002A                     __pmaintext:	
   105                           ; 1 bytes @ 0x5
   106 ;;
   107 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   108 ;;
   109 ;; *************** function _main *****************
   110 ;; Defined at:
   111 ;;		line 8 in file "Lab5Ex1.c"
   112 ;; Parameters:    Size  Location     Type
   113 ;;		None
   114 ;; Auto vars:     Size  Location     Type
   115 ;;		None
   116 ;; Return value:  Size  Location     Type
   117 ;;                  1    wreg      void 
   118 ;; Registers used:
   119 ;;		wreg, status,2, status,0
   120 ;; Tracked objects:
   121 ;;		On entry : B00/0
   122 ;;		On exit  : 0/0
   123 ;;		Unchanged: 0/0
   124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   125 ;;      Params:         0       0       0       0       0
   126 ;;      Locals:         0       0       0       0       0
   127 ;;      Temps:          0       0       0       0       0
   128 ;;      Totals:         0       0       0       0       0
   129 ;;Total ram usage:        0 bytes
   130 ;; Hardware stack levels required when called:    1
   131 ;; This function calls:
   132 ;;		Nothing
   133 ;; This function is called by:
   134 ;;		Startup code after reset
   135 ;; This function uses a non-reentrant model
   136 ;;
   137                           
   138                           
   139                           ;psect for function _main
   140  002A                     _main:	
   141                           
   142                           ;Lab5Ex1.c: 10: TRISD = 0x00;
   143                           
   144                           ;incstack = 0
   145                           ; Regs used in _main: [wreg+status,2+status,0]
   146  002A  1683               	bsf	3,5	;RP0=1, select bank1
   147  002B  1303               	bcf	3,6	;RP1=0, select bank1
   148  002C  0188               	clrf	8	;volatile
   149                           
   150                           ;Lab5Ex1.c: 11: PORTD = 0x00;
   151  002D  1283               	bcf	3,5	;RP0=0, select bank0
   152  002E  1303               	bcf	3,6	;RP1=0, select bank0
   153  002F  0188               	clrf	8	;volatile
   154                           
   155                           ;Lab5Ex1.c: 12: INTCON = 0xA0;
   156  0030  30A0               	movlw	160
   157  0031  008B               	movwf	11	;volatile
   158                           
   159                           ;Lab5Ex1.c: 14: OPTION_REGbits.T0CS = 0;
   160  0032  1683               	bsf	3,5	;RP0=1, select bank1
   161  0033  1303               	bcf	3,6	;RP1=0, select bank1
   162  0034  1281               	bcf	1,5	;volatile
   163                           
   164                           ;Lab5Ex1.c: 15: OPTION_REGbits.PSA = 0;
   165  0035  1181               	bcf	1,3	;volatile
   166                           
   167                           ;Lab5Ex1.c: 16: OPTION_REGbits.PS = 7;
   168  0036  3007               	movlw	7
   169  0037  0481               	iorwf	1,f	;volatile
   170  0038                     l15:	
   171                           ;Lab5Ex1.c: 17: while(1);
   172                           
   173  0038  2838               	goto	l15
   174  0039                     __end_of_main:	
   175                           
   176                           	psect	text1
   177  0019                     __ptext1:	
   178 ;; *************** function _myISR *****************
   179 ;; Defined at:
   180 ;;		line 20 in file "Lab5Ex1.c"
   181 ;; Parameters:    Size  Location     Type
   182 ;;		None
   183 ;; Auto vars:     Size  Location     Type
   184 ;;		None
   185 ;; Return value:  Size  Location     Type
   186 ;;                  1    wreg      void 
   187 ;; Registers used:
   188 ;;		wreg, status,2, status,0
   189 ;; Tracked objects:
   190 ;;		On entry : 0/0
   191 ;;		On exit  : 0/0
   192 ;;		Unchanged: 0/0
   193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   194 ;;      Params:         0       0       0       0       0
   195 ;;      Locals:         0       0       0       0       0
   196 ;;      Temps:          5       0       0       0       0
   197 ;;      Totals:         5       0       0       0       0
   198 ;;Total ram usage:        5 bytes
   199 ;; Hardware stack levels used:    1
   200 ;; This function calls:
   201 ;;		Nothing
   202 ;; This function is called by:
   203 ;;		Interrupt level 1
   204 ;; This function uses a non-reentrant model
   205 ;;
   206                           
   207                           
   208                           ;psect for function _myISR
   209  0019                     _myISR:	
   210                           
   211                           ;Lab5Ex1.c: 22: if(TMR0IF)
   212  0019  190B               	btfsc	11,2	;volatile
   213                           
   214                           ;Lab5Ex1.c: 23: {
   215                           ;Lab5Ex1.c: 25: INTCONbits.TMR0IF = 0;
   216  001A  110B               	bcf	11,2	;volatile
   217                           
   218                           ;Lab5Ex1.c: 26: }
   219                           ;Lab5Ex1.c: 27: PORTD++;
   220  001B  3001               	movlw	1
   221  001C  00F0               	movwf	??_myISR
   222  001D  0870               	movf	??_myISR,w
   223  001E  0788               	addwf	8,f	;volatile
   224  001F  0874               	movf	??_myISR+4,w
   225  0020  00FF               	movwf	127
   226  0021  0873               	movf	??_myISR+3,w
   227  0022  008A               	movwf	10
   228  0023  0872               	movf	??_myISR+2,w
   229  0024  0084               	movwf	4
   230  0025  0E71               	swapf	(??_myISR+1)^(0+-128),w
   231  0026  0083               	movwf	3
   232  0027  0EFE               	swapf	126,f
   233  0028  0E7E               	swapf	126,w
   234  0029  0009               	retfie
   235  002A                     __end_of_myISR:	
   236  007E                     btemp	set	126	;btemp
   237  007E                     wtemp	set	126
   238  007E                     wtemp0	set	126
   239  0080                     wtemp1	set	128
   240  0082                     wtemp2	set	130
   241  0084                     wtemp3	set	132
   242  0086                     wtemp4	set	134
   243  0088                     wtemp5	set	136
   244  007F                     wtemp6	set	127
   245  007E                     ttemp	set	126
   246  007E                     ttemp0	set	126
   247  0081                     ttemp1	set	129
   248  0084                     ttemp2	set	132
   249  0087                     ttemp3	set	135
   250  007F                     ttemp4	set	127
   251  007E                     ltemp	set	126
   252  007E                     ltemp0	set	126
   253  0082                     ltemp1	set	130
   254  0086                     ltemp2	set	134
   255  0080                     ltemp3	set	128
   256                           
   257                           	psect	intentry
   258  0004                     __pintentry:	
   259                           ;incstack = 0
   260                           ; Regs used in _myISR: [wreg+status,2+status,0]
   261                           
   262  0004                     interrupt_function:	
   263  007E                     saved_w	set	btemp
   264  0004  00FE               	movwf	btemp
   265  0005  0E03               	swapf	3,w
   266  0006  00F1               	movwf	??_myISR+1
   267  0007  0804               	movf	4,w
   268  0008  00F2               	movwf	??_myISR+2
   269  0009  080A               	movf	10,w
   270  000A  00F3               	movwf	??_myISR+3
   271  000B  1283               	bcf	3,5	;RP0=0, select bank0
   272  000C  1303               	bcf	3,6	;RP1=0, select bank0
   273  000D  087F               	movf	btemp+1,w
   274  000E  00F4               	movwf	??_myISR+4
   275  000F  120A  118A  2819   	ljmp	_myISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _myISR                                                5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Dec 09 15:31:53 2016

                     l15 0038                      fsr0 0004                     _main 002A  
                   btemp 007E                     ltemp 007E                     start 0012  
                   ttemp 007E                     wtemp 007E                    ?_main 0070  
                  _PORTD 0008                    _TRISD 0088                    _myISR 0019  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0015             __end_of_main 0039                   ??_main 0075  
                 ?_myISR 0070                   _INTCON 000B                   _TMR0IF 005A  
                 saved_w 007E  __end_of__initialization 0015           __pcstackCOMMON 0070  
          __end_of_myISR 002A           _OPTION_REGbits 0081                  ??_myISR 0070  
             __pmaintext 002A               __pintentry 0004                  __ptext1 0019  
   end_of_initialization 0015      start_initialization 0015                ___latbits 0002  
         __size_of_myISR 0011        interrupt_function 0004            __size_of_main 000F  
             _INTCONbits 000B                 intlevel1 0000  
